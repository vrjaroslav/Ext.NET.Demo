@{
    var X = Html.X();
    ViewBag.Title = "Uber Baker";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}

@section headtag
{
    <script>
        var saveChart = function (btn) {
            Ext.MessageBox.confirm('Confirm Download', 'Would you like to download the chart as an image?', function (choice) {
                if (choice == 'yes') {
                    btn.up('panel').down('chart').save({
                        type: 'image/png'
                    });
                }
            });
        }
    </script>
}

@section bodytag
{
    @(X.Spotlight()
                .ID("ProductsSpot")
                .Easing(Easing.EaseIn)
                .Duration(1))
    
    @(X.Spotlight()
        .ID("ProductTypesSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("OrdersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )

    @(X.Viewport()
        .Layout(LayoutType.Fit)
        .Items(
            X.Panel()
                .Layout(LayoutType.Fit)
                .TopBar(
                    X.Toolbar()
                        .Items(i => i.Add(
                            X.SplitButton()
                            .Text("Uber Baker Demo Application")
                            .Menu(X.Menu()
                                .Items(
                                    X.MenuItem()
                                        .Text("LogOut")
                                        .Icon(Icon.DoorOut),
                                    X.MenuItem()
                                        .Text("Profile")
                                        .Icon(Icon.User)
                                )
                            )
                            )
                        )
                )
                .Items(
                    X.GroupTabPanel()
                        .ID("UberMainTabPanel")
                        .Items(
                            X.Panel()
                                .Items(
                                    //X.Panel()
                                    //    .Title("Dashboard")
                                    //    .ID("DashboardPanel")
                                    //    .Layout(LayoutType.Fit)
                                    //    .Items(
                                    //        X.PortalColumn()
                                    //            .ColumnWidth(1)
                                    //            .Items(
                                    //                X.Portlet()
                                    //                    .ID("OrdersChartContainer")
                                    //                    .Title("Orders")
                                    //                    .Loader(X.ComponentLoader()
                                    //                        .Mode(LoadMode.Script)
                                    //                        .Url(Url.Action("RenderOrdersChart"))
                                    //                        .Params(new { containerId = "OrdersChartContainer" })
                                    //                        .LoadMask(lm => lm.ShowMask = true)
                                    //                    )
                                    //            )
                                    //    ),
                                    X.Panel()
                                        .Title("Products")
                                        .ID("ProductsPanel")
                                        .Layout(LayoutType.Fit)
                                        .Loader(X.ComponentLoader()
                                            .Mode(LoadMode.Script)
                                            .Url(Url.Action("RenderProducts"))
                                            .Params(new { containerId = "ProductsPanel" })
                                            .LoadMask(lm => lm.ShowMask = true)
                                        ),
                                    X.Panel()
                                        .Title("Product Types")
                                        .ID("ProductTypesPanel")
                                        .Layout(LayoutType.Fit)
                                        .Loader(X.ComponentLoader()
                                            .Mode(LoadMode.Script)
                                            .Url(Url.Action("RenderProductTypes"))
                                            .Params(new { containerId = "ProductTypesPanel" })
                                            .LoadMask(lm => lm.ShowMask = true)
                                        ),
                                    X.Panel()
                                        .Title("Orders")
                                        .ID("OrdersPanel")
                                        .Layout(LayoutType.Fit)
                                        .Loader(X.ComponentLoader()
                                            .Mode(LoadMode.Script)
                                            .Url(Url.Action("RenderOrders"))
                                            .Params(new { containerId = "OrdersPanel" })
                                            .LoadMask(lm => lm.ShowMask = true)
                                        ),
                                    X.Panel()
                                        .Title("Orders Chart")
                                        .ID("OrdersChartContainer")
                                        .Layout(LayoutType.Fit)
                                        .Loader(X.ComponentLoader()
                                            .Mode(LoadMode.Script)
                                            .Url(Url.Action("RenderOrdersChart"))
                                            .Params(new { containerId = "OrdersChartContainer" })
                                            .LoadMask(lm => lm.ShowMask = true)
                                        )
                                )
                                
                        )
                )
        )
    )
}