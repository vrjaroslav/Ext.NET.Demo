@{
    var X = Html.X();
    ViewBag.Title = "Uber Baker";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}

@section headtag
{
    <script>
        var saveChart = function(btn) {
            Ext.MessageBox.confirm('Confirm Download', 'Would you like to download the chart as an image?', function(choice) {
                if (choice == 'yes') {
                    btn.up('panel').down('chart').save({
                        type: 'image/png'
                    });
                }
            });
        };

        var addRecordButtonHandler = function(type, record) {
            App[type + 'Spot'].show(App[type + 'Form']);
            App[type + 'Form'].reset();
            App[type + 'Form'].getForm().loadRecord(record);
        };
        
        var getSelectedIdParameter = function (grid) {
            return grid.getSelectionModel().getSelection()[0].data.Id;
        };
        
        var recordDeleteSuccess = function (button, grid) {
            grid.getStore().reload();
        };

        var gridRowSelected = function (type, record) {
            App[type + 'Form'].getForm().loadRecord(record);
            App[type + 'Id'].setValue(record.get('Id'));
            var field = App[type + 'Form'].getForm().getFields().findBy(function (field) { return field.isXType('textfield'); });
            if (field)
                field.inputEl.focus(10);
        };
        
        var recordAddSuccess = function(type) {
            if (App[type + 'Spot'].active)
                App[type + 'Spot'].hide();
            App[type + 'Grid'].getStore().reload();
        };
        
        var recordSaveCancel = function(type) {
            if (App[type + 'Spot'].active)
                App[type + 'Spot'].hide();
            App[type + 'Form'].reset();
            App[type + 'Grid'].getSelectionModel().clearSelections();
            App[type + 'Grid'].view.refresh();
        };
    </script>
}

@section bodytag
{
    <script>
        @(X.XScript()
            .ScriptBlock(@"
                var beforeTabOpen = function(param) {
                    var tab = #{MainTabPanel}.getComponent(param); 
                    if (tab) { 
                        #{MainTabPanel}.setActiveTab(tab); 
                        return false; 
                    }
                }
            ")
       )
        
        

    </script>

    @(X.Spotlight()
        .ID("ProductsSpot")
        .Easing(Easing.EaseIn)
        .Duration(1))
    
    @(X.Spotlight()
        .ID("ProductTypesSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("OrdersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("CustomersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("UsersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )

    @(X.Viewport()
        .Layout(LayoutType.Fit)
        .Items(
            X.Panel()
                .Layout(LayoutType.Border)
                .TopBar(
                    X.Toolbar()
                        .Items(i => i.Add(
                            X.SplitButton()
                            .Text("Uber Baker Demo Application")
                            .Menu(X.Menu()
                                .Items(
                                    X.MenuItem()
                                        .Text("LogOut")
                                        .Icon(Icon.DoorOut)
                                        .DirectClickAction("LogOff", "Account"),
                                    X.MenuItem()
                                        .Text("Profile")
                                        .Icon(Icon.User)
                                )
                            )
                            )
                        )
                )
                .Items(
                    X.MenuPanel()
                        .Region(Region.West)
                        .Width(215)
                        .Split(true)
                        .Menu(m =>
                        {
                            m.Add(X.MenuItem()
                                .Icon(Icon.ApplicationViewList)
                                .Text("Products")
                                .DirectEvents(
                                    de =>
                                    {
                                        de.Click.Action = "RenderTab";
                                        de.Click.ExtraParams.Add(new {containerId = "MainTabPanel"});
                                        de.Click.ExtraParams.Add(new { tabId = "ProductsPanel" });
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.EventMask.Msg = "Loading...";
                                        de.Click.Before = "beforeTabOpen(extraParams['tabId']);";
                                    }
                                )
                            );

                            m.Add(X.MenuItem()
                                .Icon(Icon.Basket)
                                .Text("ProductTypes")
                                .DirectEvents(
                                    de =>
                                    {
                                        de.Click.Action = "RenderTab";
                                        de.Click.ExtraParams.Add(new {containerId = "MainTabPanel"});
                                        de.Click.ExtraParams.Add(new { tabId = "ProductTypesPanel" });
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.EventMask.Msg = "Loading...";
                                        de.Click.Before = "beforeTabOpen(extraParams['tabId']);";
                                    }
                                )
                            );

                            m.Add(X.MenuItem()
                                .Text("Customers")
                                .Icon(Icon.UserSuitBlack)
                                .DirectEvents(
                                    de =>
                                    {
                                        de.Click.Action = "RenderTab";
                                        de.Click.ExtraParams.Add(new {containerId = "MainTabPanel"});
                                        de.Click.ExtraParams.Add(new { tabId = "CustomersPanel" });
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.EventMask.Msg = "Loading...";
                                        de.Click.Before = "beforeTabOpen(extraParams['tabId']);";
                                    }
                                )
                            );

                            m.Add(X.MenuItem()
                                .Icon(Icon.Bookmark)
                                .Text("Orders")
                                .DirectEvents(
                                    de =>
                                    {
                                        de.Click.Action = "RenderTab";
                                        de.Click.ExtraParams.Add(new { containerId = "MainTabPanel" });
                                        de.Click.ExtraParams.Add(new { tabId = "OrdersPanel" });
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.EventMask.Msg = "Loading...";
                                        de.Click.Before = "beforeTabOpen(extraParams['tabId']);";
                                    }
                                )
                            );

                            m.Add(X.MenuItem()
                                .Text("Orders Chart")
                                .Icon(Icon.TableMultiple)
                                .DirectEvents(
                                    de =>
                                    {
                                        de.Click.Action = "RenderTab";
                                        de.Click.ExtraParams.Add(new {containerId = "MainTabPanel"});
                                        de.Click.ExtraParams.Add(new { tabId = "OrdersChartPanel" });
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.EventMask.Msg = "Loading...";
                                        de.Click.Before = "beforeTabOpen(extraParams['tabId']);";
                                    }
                                )
                            );
                            
                            m.Add(X.MenuItem()
                                .Text("Users")
                                .Icon(Icon.StatusOnline)
                                .DirectEvents(
                                    de =>
                                    {
                                        de.Click.Action = "RenderTab";
                                        de.Click.ExtraParams.Add(new {containerId = "MainTabPanel"});
                                        de.Click.ExtraParams.Add(new { tabId = "UsersPanel" });
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.EventMask.Msg = "Loading...";
                                        de.Click.Before = "beforeTabOpen(extraParams['tabId']);";
                                    }
                                )
                            );
                        }),
                        
                    X.TabPanel()
                        .ID("MainTabPanel")
                        .Region(Region.Center)
                        .MinTabWidth(100)
                        .Plugins(plugins => plugins.Add(new TabCloseMenu()))

                )
        )
    )
}