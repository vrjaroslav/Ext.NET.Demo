@{
    var X = Html.X();
    ViewBag.Title = "Uber Baker";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}

@section headtag
{
    <script>
        var saveChart = function(btn) {
            Ext.MessageBox.confirm('Confirm Download', 'Would you like to download the chart as an image?', function(choice) {
                if (choice == 'yes') {
                    btn.up('panel').down('chart').save({
                        type: 'image/png'
                    });
                }
            });
        };

        var addRecordButtonHandler = function(type, record) {
            if (App[type + "SaveButton"])
                App[type + "SaveButton"].disable();
            
            if (App[type + "CancelButton"])
                App[type + "CancelButton"].enable();
            
            App[type + 'Spot'].show(App[type + 'Form']);
            App[type + 'Form'].reset();
            App[type + 'Grid'].getSelectionModel().deselectAll();
            focusFormField(App[type + 'Form'].getForm());
        };

        var checkGridSelection = function(grid) {
            return grid.getSelectionModel().getSelection().length > 0;
        };

        var getSelectedIdParameter = function(grid) {
            return grid.getSelectionModel().getSelection()[0].data.Id;
        };

        var recordDeleteSuccess = function(button, grid, type) {
            grid.getStore().reload();
            App[type + 'Form'].reset();
        };

        var gridRowSelected = function (type, record) {
            if (App[type + "DeleteButton"])
                App[type + "DeleteButton"].enable();
            
            if (App[type + "SaveButton"])
                App[type + "SaveButton"].enable();

            if (App[type + "CancelButton"])
                App[type + "CancelButton"].enable();

            App[type + 'Form'].getForm().loadRecord(record);
            App[type + 'Id'].setValue(record.get('Id'));
            focusFormField(App[type + 'Form'].getForm());
        };

        var gridRowDeselected = function (type, record) {
            if (App[type + "DeleteButton"])
                App[type + "DeleteButton"].disable();
        };

        var recordAddSuccess = function(type) {
            if (App[type + 'Spot'].active)
                App[type + 'Spot'].hide();
            App[type + 'Form'].reset(true);
            App[type + 'Grid'].getStore().reload();
        };

        var recordSaveCancel = function (type) {
            App[type + 'Form'].reset(true);
            if (App[type + 'Spot'].active)
                App[type + 'Spot'].hide();

            if (App[type + "SaveButton"])
                App[type + "SaveButton"].disable();
            
            if (App[type + "CancelButton"])
                App[type + "CancelButton"].disable();
            App[type + 'Grid'].getSelectionModel().deselect(App[type + 'Form'].getRecord());
        };

        var focusFormField = function (form) {
            var field = form.getFields().findBy(function (field) { return field.isXType('textfield'); });
            if (field)
                field.inputEl.focus(10);
        };
        
        var validityChange = function (type, valid) {
            if (App[type + "SaveButton"])
                App[type + "SaveButton"].setDisabled(!valid);
        };
    </script>
}

@section bodytag
{
    <script>
        @(X.XScript()
            .ScriptBlock(@"
                var beforeTabOpen = function(param) {
                    var tab = #{MainTabPanel}.getComponent(param); 
                    if (tab) { 
                        #{MainTabPanel}.setActiveTab(tab); 
                        return false; 
                    }
                }
            ")
       )
    </script>

    @(X.Spotlight()
        .ID("ProductsSpot")
        .Easing(Easing.EaseIn)
        .Duration(1))
    
    @(X.Spotlight()
        .ID("ProductTypesSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("OrdersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("CustomersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Spotlight()
        .ID("UsersSpot")
        .Easing(Easing.EaseIn)
        .Duration(1)
    )
    
    @(X.Window()
        .ID("UserProfileWindow")
        .Title("User Profile")
        .Hidden(true)
        .Modal(true)
    )

    @(X.Viewport()
        .Layout(LayoutType.Fit)
        .Items(
            X.Panel()
                .Layout(LayoutType.Border)
                .TopBar(
                    X.Toolbar()
                        .Items(i => i.Add(
                            X.SplitButton()
                            .Text("Uber Baker Demo Application")
                            .MenuAlign("tr-br?")
                            .Menu(X.Menu()
                                .ItemsFromAction("AppMenu", "Permissions")
                            )
                            )
                        )
                )
                .ItemsFromAction("LeftAppMenu", "Permissions")
        )
    )   
}