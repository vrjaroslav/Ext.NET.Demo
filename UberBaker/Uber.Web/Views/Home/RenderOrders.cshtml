@using Uber.Core
@model List<Order>
@{
    var X = Html.X();
}

@(X.Panel()
    .Layout(LayoutType.Border)
    .Items(
        X.GridPanel()
            .Region(Region.Center)
            .ID("OrdersGrid")
            .Store(X.StoreFor<Order>()
                .ID("OrdersStore")
                .Proxy(X.AjaxProxy()
                    .Url(Url.Action("GetAll", "Orders"))
                    .Reader(X.JsonReader().Root("data"))
                )
                .PageSize(25)
            )
            .ColumnModel(
                X.ColumnFor(Model, m => m.Id)
                    .ToBuilder<Column.Builder>(),
                X.ColumnFor(Model, m => m.OrderDate)
                    .ToBuilder<Column.Builder>(),
                X.ColumnFor(Model, m => m.GrossTotal)
                    .ToBuilder<Column.Builder>()
                    .Width(100)
            )
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("Add")
                            .Icon(Icon.Add)
                            .Handler("#{OrdersSpot}.show(#{OrdersForm}); #{OrdersForm}.getForm().loadRecord(new ProductType());"),

                        Html.X().Button()
                            .Text("Delete")
                            .Icon(Icon.Exclamation)
                            .DirectEvents(de => {
                                de.Click.Action = "Delete";
                                de.Click.Confirmation.Message = "Are you sure you want to delete this record?";
                                de.Click.Confirmation.ConfirmRequest = true;
                                de.Click.ExtraParams.Add(new Parameter("id", "this.up('grid').getSelectionModel().getSelection()[0].data.Id", ParameterMode.Raw));
                            })
                    )
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(SelectionMode.Single)
                    .Listeners(l =>
                    {
                        l.Select.Handler = "#{OrdersForm}.getForm().loadRecord(record);";
                    })
            ),
                
        X.FormPanelForModel()
            .ID("OrdersForm")
            .Region(Region.East)
            .Width(400)
            .FieldDefaults(fd => {
                fd.LabelAlign = LabelAlign.Top;
            })
            .BodyPadding(5)
            .DefaultAnchor("95%")
            .ButtonAlign(Alignment.Center)
            .Buttons(
                X.Button()
                    .Text("Save")
                    .Icon(Icon.Disk)
                    .DirectEvents(de => {
                        de.Click.Url = Url.Action("Save", "Orders");
                        de.Click.Before = "return true; ";
                        de.Click.FormID = "OrdersForm";
                        de.Click.Success = "if (#{OrdersSpot}.active) #{OrdersSpot}.hide(); #{OrdersGrid}.getStore().reload();";
                    }),
                X.Button()
                    .Text("Cancel")
                    .Icon(Icon.Cross)
                    .Listeners(l => {
                        l.Click.Handler = "if (#{OrdersSpot}.active) #{OrdersSpot}.show(#{OrdersGrid}); #{OrdersForm}.reset();";
                    })
            )
    )
)