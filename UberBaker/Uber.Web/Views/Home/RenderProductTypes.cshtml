@using Uber.Core
@model ProductType
@{
    var X = Html.X();
}

@(X.Panel()
    .ID("ProductTypesPanel")
    .Title("Product Types")
    .Closable(true)
    .Layout(LayoutType.Border)
    .Items(
        X.GridPanel()
            .ID("ProductTypesGrid")
            .Region(Region.Center)
            .Store(X.Store()
                .ID("ProductTypesStore")
                .Model(X.Model()
                    .ClientIdProperty("PhantomId")
                    .IDProperty("Id")
                    .Name("ProductType")
                    .Fields(
                        X.ModelFieldFor(m => m.Id)
                            .UseNull(true),
                        X.ModelFieldFor(m => m.PhantomId),
                        X.ModelFieldFor(m => m.Name),
                        X.ModelFieldFor(m => m.ShortCode)
                    )
                )
                .Proxy(X.AjaxProxy()
                    .Url(Url.Action("GetAll", "ProductTypes"))
                    .Reader(X.JsonReader().Root("data"))
                )
                .PageSize(25)
            )
            .ColumnModel(
                X.ColumnFor(m => m.Id)
                    .ToBuilder<Column.Builder>()
                    .Text("Id")
                    .Width(50),
                X.ColumnFor(m => m.Name)
                    .ToBuilder<Column.Builder>()
                    .Text("Name")
                    .Flex(1),
                X.ColumnFor(m => m.ShortCode)
                    .ToBuilder<Column.Builder>()
                    .Text("Short Code")
                    .Width(100)
            )
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("Add")
                            .Icon(Icon.Add)
                            .Handler("#{ProductTypesSpot}.show(#{ProductTypesForm}); #{ProductTypesForm}.getForm().loadRecord(new ProductType());"),

                        Html.X().Button()
                            .Text("Delete")
                            .Icon(Icon.Exclamation)
                            .DirectEvents(de => {
                                de.Click.Url = Url.Action("Delete", "ProductTypes");
                                de.Click.Confirmation.Message = "Are you sure you want to delete this record?";
                                de.Click.Confirmation.ConfirmRequest = true;
                                de.Click.ExtraParams.Add(new Parameter("id", "this.up('grid').getSelectionModel().getSelection()[0].data.Id", ParameterMode.Raw));
                                de.Click.Success = "#{ProductTypesGrid}.getStore().reload();";
                            })
                    )
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(SelectionMode.Single)
                    .Listeners(l =>
                    {
                        l.Select.Handler = "#{ProductTypesForm}.getForm().loadRecord(record);";
                    })
            ),
                
        X.FormPanel()
            .ID("ProductTypesForm")
            .Region(Region.East)
            .Width(400)
            .AutoScroll(true)
            .BodyPaddingSummary("0 10")
            .DefaultAnchor("100%")
            .Items(
                X.DisplayFieldFor(m => m.Id)
                    .ID("ProductTypesId"),
                X.TextFieldFor(m => m.Name)
                    .ID("ProductTypesName")
                    .Name("Name")
                    .AllowBlank(false),
                X.TextFieldFor(m => m.ShortCode)
                    .ID("ProductTypesShortCode")
                    .Name("ShortCode")
                    .FieldLabel("Short Code")
                    .AllowBlank(false)
            )
            .TopBar(
                X.Toolbar()
                    .Items(
                        X.ToolbarFill(),
                        X.Button()
                            .Text("Save")
                            .Icon(Icon.Disk)
                            .DirectEvents(de => {
                                de.Click.Url = Url.Action("Save", "ProductTypes");
                                de.Click.Before = "return true; ";
                                de.Click.FormID = "ProductTypesForm";
                                de.Click.Success = "if (#{ProductTypesSpot}.active) #{ProductTypesSpot}.hide(); #{ProductTypesGrid}.getStore().reload();";
                            }),
                        X.Button()
                            .Text("Cancel")
                            .Icon(Icon.Cross)
                            .Listeners(l => {
                                l.Click.Handler = "if (#{ProductTypesSpot}.active) #{ProductTypesSpot}.show(#{ProductTypesGrid}); #{ProductTypesForm}.reset();";
                            })
                    )
            )
    )
)