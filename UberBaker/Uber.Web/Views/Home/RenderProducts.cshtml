@using Uber.Core
@model Product
@{
    var X = Html.X();
}

@(X.Panel()
    .ID("ProductsPanel")
    .Title("Products")
    .Layout(LayoutType.Border)
    .Closable(true)
    .Items(
        X.GridPanel()
            .Region(Region.Center)
            .ID("ProductsGrid")
            .Store(X.Store()
                .ID("ProductsStore")
                .Model(X.Model()
                    .ClientIdProperty("PhantomId")
                    .IDProperty("Id")
                    .Name("Product")
                    .Fields(
                        X.ModelFieldFor(m => m.Id)
                            .UseNull(true),
                        X.ModelFieldFor(m => m.PhantomId),
                        X.ModelFieldFor(m => m.Name),
                        X.ModelFieldFor(m => m.ShortCode),
                        X.ModelFieldFor(m => m.Description),
                        X.ModelFieldFor(m => m.UnitPrice),
                        X.ModelFieldFor(m => m.ProductType)
                            .Mapping("ProductType.Name"),
                        X.ModelFieldFor(m => m.ProductTypeId)
                            .Mapping("ProductType.Id")
                            .NullConvert(true)
                    )
                )
                .Proxy(X.AjaxProxy()
                    .Url(Url.Action("GetAll", "Products"))
                    .Reader(X.JsonReader().Root("data"))
                )
                .PageSize(25)
            )
            .ColumnModel(
                X.Column()
                    .DataIndex("Id")
                    .Text("Id")
                    .Width(50),
                X.Column()
                    .DataIndex("Name")
                    .Text("Name")
                    .Width(150),
                X.Column()
                    .DataIndex("ShortCode")
                    .Text("Short Code")
                    .Width(100),
                X.Column()
                    .DataIndex("Description")
                    .Text("Description")
                    .Flex(1),
                X.Column()
                    .DataIndex("UnitPrice")
                    .Text("Price")
                    .Width(100),
                X.Column()
                    .DataIndex("ProductType")
                    .Text("Type")
                    .Width(100)
            )
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("Add")
                            .Icon(Icon.Add)
                            .Handler("#{ProductsSpot}.show(#{ProductsForm}); #{ProductsForm}.getForm().loadRecord(new Product({ ProductType: null, ProductTypeId: null }));"),

                        Html.X().Button()
                            .Text("Delete")
                            .Icon(Icon.Exclamation)
                            .DirectEvents(de => {
                                de.Click.Url = Url.Action("Delete", "Products");
                                de.Click.Confirmation.Message = "Are you sure you want to delete this record?";
                                de.Click.Confirmation.ConfirmRequest = true;
                                de.Click.ExtraParams.Add(new Parameter("id", "this.up('grid').getSelectionModel().getSelection()[0].data.Id", ParameterMode.Raw));
                                de.Click.Success = "#{ProductsGrid}.getStore().reload();";
                            })
                    )
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(SelectionMode.Single)
                    .Listeners(l =>
                    {
                        l.Select.Handler = "#{ProductsForm}.getForm().loadRecord(record);";
                    })
            ),
                
        X.FormPanel()
            .ID("ProductsForm")
            .Region(Region.East)
            .Width(400)
            .AutoScroll(true)
            .BodyPaddingSummary("0 10")
            .DefaultAnchor("100%")
            .Items(
                X.DisplayFieldFor(m => m.Id)
                    .ID("ProductsId"),
                X.TextFieldFor(m => m.Name)
                    .ID("ProductsName")
                    .AllowBlank(false),
                X.TextFieldFor(m => m.ShortCode)
                    .ID("ProductsShortCode")
                    .FieldLabel("Short Code")
                    .AllowBlank(false),
                X.TextAreaFor(m => m.Description)
                    .ID("ProductsDescription"),
                X.NumberFieldFor(m => m.UnitPrice)
                    .ID("ProductsUnitPrice"),
                X.ComboBox()
                    .FieldLabel("Type")
                    .Name("ProductTypeId")
                    .DisplayField("Name")
                    .ValueField("Id")
                    .Store(X.StoreFor<ProductType>()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("GetAll", "ProductTypes"))
                            .Reader(Html.X().JsonReader().Root("data"))
                        )
                    )
            )
            .ButtonAlign(Alignment.Center)
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                        X.ToolbarFill(),
                        X.Button()
                            .Text("Save")
                            .Icon(Icon.Disk)
                            .DirectEvents(de => {
                                de.Click.Url = Url.Action("Save", "Products");
                                de.Click.Before = "return true; ";
                                de.Click.FormID = "ProductsForm";
                                de.Click.Success = "if (#{ProductsSpot}.active) #{ProductsSpot}.hide(); #{ProductsGrid}.getStore().reload();";
                            }),
                        X.Button()
                            .Text("Cancel")
                            .Icon(Icon.Cross)
                            .Listeners(l => {
                                l.Click.Handler = "if (#{ProductsSpot}.active) #{ProductsSpot}.hide(); #{ProductsForm}.reset();";
                            }))
            )
    )
)
    