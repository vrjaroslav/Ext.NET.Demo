@using Uber.Web.Models
@model Uber.Web.Models.ProductModel
@{
    var X = Html.X();
}

@(X.Panel()
    .ID("ProductsPanel")
    .Title("Products")
    .Layout(LayoutType.Border)
    .Closable(true)
    .Items(
        X.GridPanel()
            .Region(Region.Center)
            .ID("ProductsGrid")
            .Store(X.StoreForModel()
                .ID("ProductsStore")
                .RemoteSort(true)
                .RemotePaging(true)
                .PageSize(25)
                .Proxy(X.AjaxProxy()
                    .Url(Url.Action("ReadData", "Products"))
                    .Reader(X.JsonReader().Root("data"))
                )
                .Sorters(
                    X.DataSorter().Property("Name").Direction(Ext.Net.SortDirection.ASC)
                )
            )
            .ColumnModel(
                X.Column()
                    .DataIndex("Id")
                    .Text("Id")
                    .Width(50),
                X.Column()
                    .DataIndex("Name")
                    .Text("Name")
                    .Width(150),
                X.Column()
                    .DataIndex("ShortCode")
                    .Text("Short Code")
                    .Width(100),
                X.Column()
                    .DataIndex("Description")
                    .Text("Description")
                    .Flex(1),
                X.Column()
                    .DataIndex("UnitPrice")
                    .Text("Price")
                    .Width(100)
                    .Renderer(RendererFormat.UsMoney),
                X.Column()
                    .DataIndex("ProductTypeName")
                    .Text("Type")
                    .Width(100)
                    .Sortable(false)
            )
            .Features(
                X.GridFilters()
                    .Filters(
                        X.NumericFilter().DataIndex("Id"),
                        X.StringFilter().DataIndex("Name"),
                        X.StringFilter().DataIndex("ShortCode"),
                        X.StringFilter().DataIndex("Description"),
                        X.StringFilter().DataIndex("ProductTypeName"),
                        X.NumericFilter().DataIndex("UnitPrice")
                    )
            )
            .TopBar(
                X.Toolbar()
                    .ItemsFromAction("GridPanelTopToolbar", "Permissions", new { typeName = "Product" })
                    
            )
            .SelectionModel(
                X.RowSelectionModel()
                    .Mode(SelectionMode.Single)
                    .Listeners(l =>
                    {
                        l.Deselect.Handler = "gridRowDeselected('Products');";
                        l.Select.Handler = "gridRowSelected('Products', record);";
                    })
            )
            .BottomBar(
                X.PagingToolbar()
            ),
                
        X.FormPanel()
            .ID("ProductsForm")
            .Region(Region.East)
            .Width(400)
            .AutoScroll(true)
            .BodyPaddingSummary("0 10")
            .DefaultAnchor("100%")
            .Listeners(l =>
            {
                l.ValidityChange.Handler = "validityChange('Products', valid);";
            })
            .Items(
                X.HiddenFor(m => m.Id)
                    .ID("ProductsIdValue"),
                X.DisplayFieldFor(m => m.Id)
                    .ID("ProductsId"),
                X.TextFieldFor(m => m.Name)
                    .ID("ProductsName")
                    .AllowBlank(false),
                X.TextFieldFor(m => m.ShortCode)
                    .ID("ProductsShortCode")
                    .FieldLabel("Short Code")
                    .AllowBlank(false),
                X.TextAreaFor(m => m.Description)
                    .ID("ProductsDescription"),
                X.NumberFieldFor(m => m.UnitPrice)
                    .ID("ProductsUnitPrice"),
                X.ComboBox()
                    .FieldLabel("Type")
                    .Name("ProductTypeId")
                    .DisplayField("Name")
                    .ValueField("Id")
                    .ForceSelection(true)
                    .Store(X.StoreFor<ProductTypeModel>()
                        .Proxy(X.AjaxProxy()
                            .ExtraParams(e => e.Add(new Parameter("getAll", "true", ParameterMode.Raw)))
                            .Url(Url.Action("ReadData", "ProductTypes"))
                            .Reader(X.JsonReader().Root("data"))
                        )
                    )
            )
            .TopBar(
                X.Toolbar()
                    .ItemsFromAction("FormPanelTopToolbar", "Permissions", new { typeName = "Product" })
            )
    )
)
    